% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mettools.R
\name{raincorrect}
\alias{raincorrect}
\title{Calculates elevation correction factor to apply to fine-resolution rainfall data}
\usage{
raincorrect(demc, demf, rainc, rainf)
}
\arguments{
\item{demc}{a coarse-resolution raster of digital elevation data}

\item{demf}{a fine-resolution raster of digital elevation data for the region for which correction factors are required}

\item{rainc}{a coarse-resolution raster of e.g. monthly or annual rainfall covering the same extent
as \code{demc}}

\item{rainf}{a fine-resolution raster of e.g. monthly or annual rainfall derived by resampling
coarse-resolution rainfall data, covering the same extent as \code{demf}.}
}
\value{
a raster of correction factors
}
\description{
\code{raincorrect} Calculates an altitudinal correction factor for application to fine-resolution e.g.
daily rainfall derived using bilinear interpolation.
}
\details{
Fine-scale e.g. daily or hourly ainfall data derived by resampling or interpolating
coarse-resolution data fails to adequately capture elevation effects on rainfall. This
function fits a thin plate spline model fitted to coarse-resolution rainfall data with
elevation as a predictor. The model is then applied to fine-resolution data and the results
compared to those obtained using simple raster resampling using bilinear interpolation.
The correction factor can then be applied to e.g. daily rainfall.

#' @importFrom rgcvpack fitTps
#' @importFrom rgcvpack predict.Tps
}
\examples{
rainf <- resample(cornwallrain, dtm100m)
plot(mask(rainf, dtm100m)) # rainfall derived using bilinear interpolation
cf <- raincorrect(dtm1km, dtm100m, cornwallrain, rainf) # takes ~ 20 seconds to run
plot(rainf * cf) # rainfall with correction factor applied

}
